Опис вимог до JSON файлу для програми:

Цей файл містить інформацію про його поля які будуть визначати поведінку програми.

1) fuel_pumps_count - кількість колонок які доступні машинам для заправки
    Поле обовязкове.
2) initial_fuel_in_tanker - кількість палива яке буде переносити танкер в собі щоб потім його 
загрузити в сховище на станції
    Поле обовязкове.
3) fuel_transfer_rate - кількість палива яке танкер буде заправляти на станції за один раз
    Поле обовязкове.
4) vehicles - масив машин які будуть прибувати на станцію щоб заправитися. 
    Поле обовязкове.
5) max_vehicle_capacity: максимальна кількість машин яку симуляція буде використовувати. Якщо 
    кількість машин буде перевищувати це число тоді програма у випадковому порядку вибере
    цю кількість машин і покаже попередження.
    Поле не обовязкове.
6) randomize_arrival - булеве поле яке вказує що ми хочемо перемішати порядок машин 
    які будуть прибувати на станцію. 
        Якщо значення false -> машини будуть прибувати на станцію один за одним в тому порядку який ми задали. 
        Якщо true -> ми змішаємо порядок i машини будуть прибувати на станцію у випадковому порядку. 
    Якщо поля немає, тоді це буде те саме як значення false.
    Поле не обовязкове.

vehicles буде містити 3 типи машин:
    - auto
    - van
    - truck

Якщо є обєкти з однаковими типами машин, вони будуть обєднані.
Масив vehicles має містити як мінімум один тип машини.

Кожен обєкт буде відображати інформацію про кожен тип машини.
Ось перелік полів який буде мати обєкт:
    - vehicle_type: це поле буде містити один із типів - auto/van/track
        Поле обовязкове. Якщо його немає, ігноруємо обєкт.

    - default_fuel_needed: кількість палива яку машина буде споживати за замовчуванням
        Поле обовязкове. Якщо його немає, ігноруємо обєкт.

    - default_wait_time_sec: час у секундах який вказує на те скільки машина готова чекати на станції поки палива не буде достатньо.
        Якщо поле рівне -1, це означає що машина бед чекати без обмеження.
        Поле обовязкове. Якщо його немає, ігноруємо обєкт.

    - default_count: кількість машин цього типу
        Поле обовязкове. Якщо його немає, ігноруємо обєкт.

    - custom_waiting_list: масив обєктів який буде містити інформацію про різні налаштування машин цього типу.
        Ось список полів які будуть в обєкті масиву custom_waiting_list:
            а) wait_time_sec: час який машина буде чекати. Якщо поле рівне -1, це означає що машина бед чекати без обмеження.
            b) fuel_needed: кількість палива який машина хоче отримати
            c) count: кількість машин з цими налаштуваннями
        Поле count є обовязкове, якщо його не буде, ми ігноруємо цей обєкт.
        Для більшої гнучкості кожен обєкт може 
            або fuel_needed 
            або wait_time_sec 
            або усі 3 поля.

        Тобто якщо немає count - обєкт ігнорується.
        Якщо є count та fuel_needed, тоді ми беремо значення default_wait_time_sec.
        Якщо є ми маємо count та wait_time_sec тоді беремо fuel_needed_default.

        Якщо поле custom_waiting_list відсутнє, тоді ми будемо дивитися на інші поля:
            - fuel_needed_default
            - default_wait_time_sec
            - default_count

Опис вимог до JSON файлу для статистики:

Файл буде містити інформацію про результат виконання програми:
1) gas_station_stats
    - total_fuel_consumed: описує скільки палива було спожито 
        усіма машинами в результаті
    - total_serviced_vehicles: поле яке вказує скільки загалом машин було обслуговано
    - remaining_fuel_in_storage: кількість палива яке залишилось після усіх машин
2) vehicles_stats
    - total_vehicles_in_queue: кількість машин які прибули на станцію для отримання палива
    - average_wait_time_sec: середній час очікування усіх машин
    - average_fuel_required_per_vehicle: скільки в середньому палива машини потребували
    - average_fuel_consumed_per_vehicle: скільки палива в середньому машини фактично спожили
    - stats_per_vehicle: масив обєктів з результатами по кожній машині окремо. Містить такі поля:
        a) vehicle_type: це поле буде містити один із типів - auto/van/track
        b) fuel_required: кількість палива машина потребувала
        c) fuel_received: кількість палива яке отримала фактично
        d) wait_time_sec: скільки часу в секундах чекала на паливо
    - stats_per_vehicle_type: масив обєктів статистики по типах машин. Маємо таку кількість
        обєктів скільки типів існує. Кожен обєкт має:
        a) vehicle_type: це поле буде містити один із типів - auto/van/track
        b) total_serviced_cars: кількість обслугованих машин
        c) total_fuel_consumed_by_all_cars: скільки загалом палива усі машини цього типу спожили
        d) total_fuel_required_by_all_cars: скільки загалом палива машини потребували
        e) total_wait_time_sec: скільки всього часу в секундах усі машини чекали на паливо
3) tanker_stats
    - total_refuels: показує скільки раз танкер наповнив сховище з паливом на станції
    - fuel_per_refuel: показує скільки палива танкер заливав в сховище
    - total_refuel_time_sec: час в секундах скільки загалом танкер загружав паливом
        від моменту коли почав заливати до моменту коли остання крапля пального попала в сховище





Крок 1:
    Загрузка файлу data.json

Крок 2:
    Перевірка на наявність усіх необхідних полів. 
    Якщо відсутня інформація - повідомляти користувача.

Крок 3:
    Зчитування інформації. 
    Якщо відсутня інформація - повідомляти користувача.

Крок 4:
    Коли усі необхідні поля наявні, перетворення даний в код.
    Створення масивів, структур і тд.

Крок 5:
    Запуск симуляції.

Крок 6:
    Після завершення, збір статистики.

Крок 7:
    Запис статистики в окремий файл - statistics.json
